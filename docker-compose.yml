version: '3'
services:
  app:
    container_name: app
    build: .
    depends_on:
      - ddb
      - redis
    ports:
      - "5000:80"
    environment:
      AWS_ACCESS_KEY_ID: no_key_needed
      AWS_SECRET_ACCESS_KEY: no_key_needed
      AWS_REGION_NAME: us-west-2
      DDB_ENDPOINT_URL: http://ddb:8000
      REDIS_ENDPOINT_URL: redis
    env_file:
      - .env
    volumes:
      - "./static:/app/app/static/"

  ddb:
    container_name: ddb
    image: amazon/dynamodb-local
    restart: always
    ports:
        - "8000:8000"
  
  redis:
    container_name: redis
    image: redis:5
    restart: always

  web:
    container_name: web
    image: nginx:latest
    ports:
      - "3000:443"
      - "80:80"
      - "443:443"
    depends_on:
      - app
      - certbot
    env_file:
      - .env
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.template"
      - "./static/:/usr/share/nginx/html/"
      - "./data/certbot/conf:/etc/letsencrypt"
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  